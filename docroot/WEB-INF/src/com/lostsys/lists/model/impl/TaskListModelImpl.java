/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.lostsys.lists.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.lostsys.lists.model.TaskList;
import com.lostsys.lists.model.TaskListModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the TaskList service. Represents a row in the &quot;Lostsys_TaskList&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.lostsys.lists.model.TaskListModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TaskListImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TaskListImpl
 * @see com.lostsys.lists.model.TaskList
 * @see com.lostsys.lists.model.TaskListModel
 * @generated
 */
public class TaskListModelImpl extends BaseModelImpl<TaskList>
	implements TaskListModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a task list model instance should use the {@link com.lostsys.lists.model.TaskList} interface instead.
	 */
	public static final String TABLE_NAME = "Lostsys_TaskList";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "portlet", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "weight", Types.INTEGER },
			{ "ratings", Types.INTEGER },
			{ "comments", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table Lostsys_TaskList (id_ LONG not null primary key,portlet VARCHAR(75) null,description STRING null,weight INTEGER,ratings INTEGER,comments INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table Lostsys_TaskList";
	public static final String ORDER_BY_JPQL = " ORDER BY taskList.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Lostsys_TaskList.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.lostsys.lists.model.TaskList"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.lostsys.lists.model.TaskList"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.lostsys.lists.model.TaskList"));

	public TaskListModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TaskList.class;
	}

	@Override
	public String getModelClassName() {
		return TaskList.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("portlet", getPortlet());
		attributes.put("description", getDescription());
		attributes.put("weight", getWeight());
		attributes.put("ratings", getRatings());
		attributes.put("comments", getComments());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String portlet = (String)attributes.get("portlet");

		if (portlet != null) {
			setPortlet(portlet);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Integer weight = (Integer)attributes.get("weight");

		if (weight != null) {
			setWeight(weight);
		}

		Integer ratings = (Integer)attributes.get("ratings");

		if (ratings != null) {
			setRatings(ratings);
		}

		Integer comments = (Integer)attributes.get("comments");

		if (comments != null) {
			setComments(comments);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public String getPortlet() {
		if (_portlet == null) {
			return StringPool.BLANK;
		}
		else {
			return _portlet;
		}
	}

	@Override
	public void setPortlet(String portlet) {
		_portlet = portlet;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public int getWeight() {
		return _weight;
	}

	@Override
	public void setWeight(int weight) {
		_weight = weight;
	}

	@Override
	public int getRatings() {
		return _ratings;
	}

	@Override
	public void setRatings(int ratings) {
		_ratings = ratings;
	}

	@Override
	public int getComments() {
		return _comments;
	}

	@Override
	public void setComments(int comments) {
		_comments = comments;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			TaskList.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TaskList toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TaskList)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TaskListImpl taskListImpl = new TaskListImpl();

		taskListImpl.setId(getId());
		taskListImpl.setPortlet(getPortlet());
		taskListImpl.setDescription(getDescription());
		taskListImpl.setWeight(getWeight());
		taskListImpl.setRatings(getRatings());
		taskListImpl.setComments(getComments());

		taskListImpl.resetOriginalValues();

		return taskListImpl;
	}

	@Override
	public int compareTo(TaskList taskList) {
		long primaryKey = taskList.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TaskList)) {
			return false;
		}

		TaskList taskList = (TaskList)obj;

		long primaryKey = taskList.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<TaskList> toCacheModel() {
		TaskListCacheModel taskListCacheModel = new TaskListCacheModel();

		taskListCacheModel.id = getId();

		taskListCacheModel.portlet = getPortlet();

		String portlet = taskListCacheModel.portlet;

		if ((portlet != null) && (portlet.length() == 0)) {
			taskListCacheModel.portlet = null;
		}

		taskListCacheModel.description = getDescription();

		String description = taskListCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			taskListCacheModel.description = null;
		}

		taskListCacheModel.weight = getWeight();

		taskListCacheModel.ratings = getRatings();

		taskListCacheModel.comments = getComments();

		return taskListCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", portlet=");
		sb.append(getPortlet());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", weight=");
		sb.append(getWeight());
		sb.append(", ratings=");
		sb.append(getRatings());
		sb.append(", comments=");
		sb.append(getComments());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append("com.lostsys.lists.model.TaskList");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>portlet</column-name><column-value><![CDATA[");
		sb.append(getPortlet());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>weight</column-name><column-value><![CDATA[");
		sb.append(getWeight());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ratings</column-name><column-value><![CDATA[");
		sb.append(getRatings());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comments</column-name><column-value><![CDATA[");
		sb.append(getComments());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TaskList.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TaskList.class
		};
	private long _id;
	private String _portlet;
	private String _description;
	private int _weight;
	private int _ratings;
	private int _comments;
	private TaskList _escapedModel;
}