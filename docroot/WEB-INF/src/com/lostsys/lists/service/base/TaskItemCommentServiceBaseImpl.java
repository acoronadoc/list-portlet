/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.lostsys.lists.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserPersistence;

import com.lostsys.lists.model.TaskItemComment;
import com.lostsys.lists.service.TaskItemCommentLocalService;
import com.lostsys.lists.service.TaskItemCommentService;
import com.lostsys.lists.service.TaskItemLocalService;
import com.lostsys.lists.service.TaskItemService;
import com.lostsys.lists.service.TaskListLocalService;
import com.lostsys.lists.service.TaskListService;
import com.lostsys.lists.service.persistence.TaskItemCommentPersistence;
import com.lostsys.lists.service.persistence.TaskItemPersistence;
import com.lostsys.lists.service.persistence.TaskListPersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the task item comment remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.lostsys.lists.service.impl.TaskItemCommentServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.lostsys.lists.service.impl.TaskItemCommentServiceImpl
 * @see com.lostsys.lists.service.TaskItemCommentServiceUtil
 * @generated
 */
public abstract class TaskItemCommentServiceBaseImpl extends BaseServiceImpl
	implements TaskItemCommentService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.lostsys.lists.service.TaskItemCommentServiceUtil} to access the task item comment remote service.
	 */

	/**
	 * Returns the task item local service.
	 *
	 * @return the task item local service
	 */
	public TaskItemLocalService getTaskItemLocalService() {
		return taskItemLocalService;
	}

	/**
	 * Sets the task item local service.
	 *
	 * @param taskItemLocalService the task item local service
	 */
	public void setTaskItemLocalService(
		TaskItemLocalService taskItemLocalService) {
		this.taskItemLocalService = taskItemLocalService;
	}

	/**
	 * Returns the task item remote service.
	 *
	 * @return the task item remote service
	 */
	public TaskItemService getTaskItemService() {
		return taskItemService;
	}

	/**
	 * Sets the task item remote service.
	 *
	 * @param taskItemService the task item remote service
	 */
	public void setTaskItemService(TaskItemService taskItemService) {
		this.taskItemService = taskItemService;
	}

	/**
	 * Returns the task item persistence.
	 *
	 * @return the task item persistence
	 */
	public TaskItemPersistence getTaskItemPersistence() {
		return taskItemPersistence;
	}

	/**
	 * Sets the task item persistence.
	 *
	 * @param taskItemPersistence the task item persistence
	 */
	public void setTaskItemPersistence(TaskItemPersistence taskItemPersistence) {
		this.taskItemPersistence = taskItemPersistence;
	}

	/**
	 * Returns the task item comment local service.
	 *
	 * @return the task item comment local service
	 */
	public TaskItemCommentLocalService getTaskItemCommentLocalService() {
		return taskItemCommentLocalService;
	}

	/**
	 * Sets the task item comment local service.
	 *
	 * @param taskItemCommentLocalService the task item comment local service
	 */
	public void setTaskItemCommentLocalService(
		TaskItemCommentLocalService taskItemCommentLocalService) {
		this.taskItemCommentLocalService = taskItemCommentLocalService;
	}

	/**
	 * Returns the task item comment remote service.
	 *
	 * @return the task item comment remote service
	 */
	public TaskItemCommentService getTaskItemCommentService() {
		return taskItemCommentService;
	}

	/**
	 * Sets the task item comment remote service.
	 *
	 * @param taskItemCommentService the task item comment remote service
	 */
	public void setTaskItemCommentService(
		TaskItemCommentService taskItemCommentService) {
		this.taskItemCommentService = taskItemCommentService;
	}

	/**
	 * Returns the task item comment persistence.
	 *
	 * @return the task item comment persistence
	 */
	public TaskItemCommentPersistence getTaskItemCommentPersistence() {
		return taskItemCommentPersistence;
	}

	/**
	 * Sets the task item comment persistence.
	 *
	 * @param taskItemCommentPersistence the task item comment persistence
	 */
	public void setTaskItemCommentPersistence(
		TaskItemCommentPersistence taskItemCommentPersistence) {
		this.taskItemCommentPersistence = taskItemCommentPersistence;
	}

	/**
	 * Returns the task list local service.
	 *
	 * @return the task list local service
	 */
	public TaskListLocalService getTaskListLocalService() {
		return taskListLocalService;
	}

	/**
	 * Sets the task list local service.
	 *
	 * @param taskListLocalService the task list local service
	 */
	public void setTaskListLocalService(
		TaskListLocalService taskListLocalService) {
		this.taskListLocalService = taskListLocalService;
	}

	/**
	 * Returns the task list remote service.
	 *
	 * @return the task list remote service
	 */
	public TaskListService getTaskListService() {
		return taskListService;
	}

	/**
	 * Sets the task list remote service.
	 *
	 * @param taskListService the task list remote service
	 */
	public void setTaskListService(TaskListService taskListService) {
		this.taskListService = taskListService;
	}

	/**
	 * Returns the task list persistence.
	 *
	 * @return the task list persistence
	 */
	public TaskListPersistence getTaskListPersistence() {
		return taskListPersistence;
	}

	/**
	 * Sets the task list persistence.
	 *
	 * @param taskListPersistence the task list persistence
	 */
	public void setTaskListPersistence(TaskListPersistence taskListPersistence) {
		this.taskListPersistence = taskListPersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Returns the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
	}

	protected Class<?> getModelClass() {
		return TaskItemComment.class;
	}

	protected String getModelClassName() {
		return TaskItemComment.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = taskItemCommentPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = TaskItemLocalService.class)
	protected TaskItemLocalService taskItemLocalService;
	@BeanReference(type = TaskItemService.class)
	protected TaskItemService taskItemService;
	@BeanReference(type = TaskItemPersistence.class)
	protected TaskItemPersistence taskItemPersistence;
	@BeanReference(type = TaskItemCommentLocalService.class)
	protected TaskItemCommentLocalService taskItemCommentLocalService;
	@BeanReference(type = TaskItemCommentService.class)
	protected TaskItemCommentService taskItemCommentService;
	@BeanReference(type = TaskItemCommentPersistence.class)
	protected TaskItemCommentPersistence taskItemCommentPersistence;
	@BeanReference(type = TaskListLocalService.class)
	protected TaskListLocalService taskListLocalService;
	@BeanReference(type = TaskListService.class)
	protected TaskListService taskListService;
	@BeanReference(type = TaskListPersistence.class)
	protected TaskListPersistence taskListPersistence;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private TaskItemCommentServiceClpInvoker _clpInvoker = new TaskItemCommentServiceClpInvoker();
}